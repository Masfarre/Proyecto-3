# app.py - Archivo principal de la aplicación (versión sin .env)
import os
import re
import json
import datetime
from collections import defaultdict
import spacy
from flask import Flask, render_template, request, redirect, url_for, jsonify

# Cargar modelo de NLP
nlp = spacy.load("en_core_web_sm")

app = Flask(__name__)

# Configuración directa en el código (sin variables de entorno)
app.secret_key = 'supersecretkey123!$%'  # Secreto para sesiones
DEBUG_MODE = True  # Cambiar a False en producción

# Base de datos simple (en producción usaríamos una base de datos real)
users = {
    "manager@company.com": {
        "password": "securepass123",
        "name": "John Manager",
        "role": "manager",
        "team": "leadership"
    },
    "dev1@company.com": {
        "password": "developerpass",
        "name": "Alice Developer",
        "role": "developer",
        "skills": ["python", "javascript", "api"],
        "workload": 30
    },
    "dev2@company.com": {
        "password": "devpassword",
        "name": "Bob Coder",
        "role": "developer",
        "skills": ["python", "database", "testing"],
        "workload": 70
    },
    "marketing@company.com": {
        "password": "marketingpass",
        "name": "Carol Marketer",
        "role": "marketing",
        "skills": ["seo", "content", "campaign"],
        "workload": 50
    }
}

tasks = []
task_id_counter = 1

# ... (el resto del código de la clase Task y rutas permanece igual) ...

if __name__ == '__main__':
    # Crear algunas tareas de ejemplo
    sample_tasks = [
        ("Fix critical login bug", "Users can't login to the system. This is urgent!", "2023-11-15", "manager@company.com"),
        ("Create marketing campaign", "Plan Q4 marketing campaign for new product launch", "2023-12-01", "manager@company.com"),
        ("Update documentation", "Add new API endpoints to developer documentation", "2023-11-30", "dev1@company.com"),
        ("Improve UI design", "Redesign dashboard interface for better UX", "2023-11-25", "manager@company.com"),
        ("Schedule team meeting", "Organize monthly team meeting to discuss progress", "2023-11-20", "manager@company.com")
    ]
    
    for title, desc, deadline, creator in sample_tasks:
        task = Task(title, desc, deadline, creator)
        task.auto_assign()
        tasks.append(task)
    
    # Configuración de ejecución
    app.run(debug=DEBUG_MODE)
